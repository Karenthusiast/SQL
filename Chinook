--What is the most sold album in the USA?
SELECT a.title AS album_title,
       ar.name AS artist_name,
       COUNT(*) AS total_sold
FROM chinook.tracks t
JOIN chinook.albums a ON t.albumId = a.albumId
JOIN chinook.artists ar ON a.artistId = ar.artistId
JOIN chinook.invoice_items ii ON t.trackId = ii.trackId
JOIN chinook.invoices i ON ii.invoiceId = i.invoiceId
WHERE i.billingCountry = 'USA'
GROUP BY a.albumId
ORDER BY total_sold DESC
LIMIT 1;



--Order the countries that sold the most albums to the least.
SELECT billingCountry
,COUNT (InvoiceId)as total_albums_sold
FROM chinook.invoices
GROUP BY BillingCountry
ORDER BY total_albums_sold desc;


--Order the most popular genre based on the total albums sold.
SELECT g.name
, COUNT (DISTINCT t.albumId) as total_sold
FROM chinook.genres g
JOIN chinook.tracks t
ON g.GenreId = t.GenreId
JOIN chinook.invoice_items ii
ON t.trackId= ii.trackId
Join chinook.invoices i
ON ii.invoiceid=i.invoiceid
GROUP BY g.name,g.genreid
ORDER BY total_sold desc;

--How many tracks are there in each genre?
SELECT g.name AS "Genre"
, COUNT (t.trackid)as "TotalTracks"
FROM chinook.genres g
JOIN chinook.tracks t
ON g.genreid = t.genreid
GROUP by g.name
ORDER BY g.name;

--What are the top 5 selling tracks? (use a Common Table Expression / CTE)
WITH TrackSales_CTE AS (
SELECT t.trackId
,t.name
,SUM (ii.Quantity)AS totalSold
FROM tracks t
JOIN invoice_items ii
ON t.Trackid = ii.trackId
JOIN invoices i
ON i.invoiceId= ii.invoiceId
GROUP BY t.trackid
)
SELECT TrackId
,Name
,TotalSold
from TrackSales_cte
ORDER BY TotalSold desc
LIMIT 5;

--Show Customers (their full names, customer ID, and country) who are not in the US. 
SELECT FirstName, 
LastName
,CustomerId
,Country
FROM chinook.customers
WHERE Country <> 'USA';

--Show only the Customers from Brazil.
SELECT * 
FROM chinook.customers
WHERE Country = 'Brazil';

--Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT customers.FirstName
,customers.LastName
,invoices.InvoiceId
,invoices.BillingCountry
FROM chinook.invoices invoices
LEFT JOIN chinook.customers customers
ON invoices.CustomerId= customers.CustomerId
WHERE BillingCountry = 'Brazil';


--Show the Employees who are Sales Agents.
SELECT Firstname
,LastName
,Title
FROM chinook.employees
WHERE Title= 'Sales Support Agent';

--Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry
FROM chinook.invoices;


--Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT emp.FirstName
,emp.LastName
,inv.InvoiceId
FROM chinook.employees emp
JOIN chinook.customers cust on cust.SupportRepId = emp.EmployeeId
JOIN chinook.invoices inv ON inv.CustomerId = cust.CustomerId;


--Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT 
emp.FirstName
,emp.LastName
,cust.Country
,cust.FirstName
,cust.LastName
,inv.Total
FROM chinook.employees emp
JOIN chinook.customers cust on cust.SupportRepId = emp.EmployeeId
JOIN chinook.invoices inv ON inv.CustomerId = cust.CustomerId;


--How many Invoices were there in 2009?
SELECT COUNT(*)
FROM chinook.invoices
WHERE InvoiceDate like '%2009%';


--What are the total sales for 2009?
SELECT SUM(total)
FROM chinook.invoices
WHERE InvoiceDate like '%2009%';

--Write a query that includes the purchased track name with each invoice line ID.

SELECT tracks.Name
,InvItem.InvoiceLineId
FROM chinook.tracks tracks
JOIN chinook.invoice_items InvItem
ON tracks.TrackId = InvItem.TrackId;

--Write a query that includes the purchased track name AND artist name with each invoice line ID
SELECT t.Name AS Track_Name
,artists.Name AS Artist_Name
,i.InvoiceLineId
FROM chinook.invoice_items i
LEFT JOIN chinook.tracks t
ON t.TrackId = i.TrackId
INNER JOIN chinook.albums
ON t.AlbumId = albums.AlbumId
Left Join chinook.artists
ON albums.ArtistId = artists.ArtistId;

--Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT m.Name AS 'Media Type'
,g.name AS 'Genre'
,a.title AS 'Album Title'
,t.name AS 'Track Name'
FROM chinook.tracks t
JOIN chinook.Albums a
ON a.AlbumId= t.AlbumId
JOIN chinook.Media_Types m
ON m.MediaTypeId=t.MediaTypeId
Join chinook.genres g
ON g.GenreId = t.GenreId;

--Show the total sales made by each sales agent.
SELECT ROUND (SUM(i.total),2) as 'Total Sale'
,e.FirstName
,e.LastName
FROM chinook.employees e
JOIN chinook.customers c on c.SupportRepId = e.EmployeeId
JOIN chinook.invoices i ON i.CustomerId = c.CustomerId
WHERE e.Title = 'Sales Support Agent'
GROUP BY e.FirstName;


--Which sales agent made the most dollars in sales in 2009?

SELECT e.FirstName
,e.LastName
FROM chinook.employees e
JOIN chinook.customers c on c.SupportRepId = e.EmployeeId
JOIN chinook.invoices i ON i.CustomerId = c.CustomerId
JOIN chinook.invoice_items it On it.invoiceid=i.invoiceid
WHERE e.Title = 'Sales Support Agent' 
AND I.InvoiceDate LIKE '2009%' 
GROUP BY e.FirstName
ORDER BY (round(sum(I.Total), 2))  DESC LIMIT 1;


